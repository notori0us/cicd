name: Wave-Based Deployment

on:
  push:
    branches:
      - main  # Trigger only on main branch pushes
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
      - name: Install dependencies
        run: bundle install
      - name: Test the project
        run: bundle exec ruby test*

  deploy_dev:
    name: Deploy to Development
    needs: build  # Waits for Build to finish
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Dev (Placeholder)
        run: echo "Deploying to Development..."

  test_dev:
    name: Test Development Environment
    needs: deploy_dev
    runs-on: ubuntu-latest
    steps:
      - name: Run Integration Tests on Dev (Placeholder)
        run: echo "Running tests against Development..."

  # 4️⃣ Manual Approval for Staging Deployment
  approval_staging:
    name: Manual Approval for Staging
    needs: test_dev  # Waits for Dev tests to pass
    runs-on: ubuntu-latest
    steps:
      - name: Approval Required
        run: echo "Waiting for approval..."
    environment:
      name: staging
      url: https://staging.example.com

  # 5️⃣ Deploy to Staging
  deploy_staging:
    name: Deploy to Staging
    needs: approval_staging
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Staging (Placeholder)
        run: echo "Deploying to Staging..."

  # 6️⃣ Integration Tests on Staging
  test_staging:
    name: Test Staging Environment
    needs: deploy_staging
    runs-on: ubuntu-latest
    steps:
      - name: Run Integration Tests on Staging (Placeholder)
        run: echo "Running tests against Staging..."

  # 7️⃣ Manual Approval for Production Rollout
  approval_production:
    name: Manual Approval for Production Deployment
    needs: test_staging
    runs-on: ubuntu-latest
    steps:
      - name: Approval Required
        run: echo "Waiting for production approval..."
    environment:
      name: production
      url: https://production.example.com

  # 8️⃣ Deploy to Production Regions One by One
  deploy_region_1:
    name: Deploy to Region 1
    needs: approval_production
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Region 1 (Placeholder)
        run: echo "Deploying to Region 1..."

  deploy_region_2:
    name: Deploy to Region 2
    needs: deploy_region_1  # Ensures sequential rollout
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Region 2 (Placeholder)
        run: echo "Deploying to Region 2..."

  deploy_region_3:
    name: Deploy to Region 3
    needs: deploy_region_2  # Ensures sequential rollout
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Region 3 (Placeholder)
        run: echo "Deploying to Region 3..."
